/*******************************************************************************
**
**       Copyright (c) Telescope Technologies Limited (TTL) 2001.
** 
** Filename: 
**    Cct.h
**
** Purpose:
**    Public header file for Computer Control Task (CCT).
**
** Description:
**    This code has been written to conform to "TTL Coding Standard" v1.0.
**
** Traceability to Software Design: 
**    -
**
** Authors:
**    mjf : Martyn J. Ford (TTL)
**
** Version:
**    $Id: Cct.h,v 0.4 2001/03/14 15:35:30 mjf Exp $
**
** History:
**    $Log: Cct.h,v $
**    Revision 0.4  2001/03/14 15:35:30  mjf
**    Removal of temporary definitions for stale system files on VMS.
**
**    Revision 0.3  2001/03/14 14:58:04  mjf
**    Porting to VMS complete.
**
**    Revision 0.2  2001/03/08 16:54:44  mjf
**    Full functionality for QNX added. Datums only submitted to the SDB
**    when they are re-determined. Query datums are re-determined on a
**    corresponding 'get' command.
**
**    Revision 0.1  2001/03/07 12:05:37  mjf
**    Initial revision.
**
**
*******************************************************************************/

#ifndef CCT_H_DEFINED
#define CCT_H_DEFINED


/*
** Include files
*/

#include "TtlSystem.h"


/*
** Macro definitions
*/

/* Lengths of command messages */

#define E_CCT_SET_1_CMD_LEN       sizeof( eTtlSet_t )


/*
** Definitions
*/ 

/* Global data submitted to the SDB by the CCT */

typedef enum eCctDataId_e
{

   D_CCT_DATAID_BOL = 0,               /* Beginning of data list */

   /* Generic datums */

   D_CCT_PROC_STATE = D_MCP_PROC_STATE,   /* CCT process state */
   D_CCT_AUTH_STATE = D_MCP_AUTH_STATE,   /* CCT authorisation state */
   D_CCT_SYS_REQUEST = D_MCP_SYS_REQUEST, /* CCT process state */
   D_CCT_APP_VERSION = D_MCP_APP_VERSION, /* CCT process state */

   /* Query datums */

   D_CCT_QRY_OS_AVAILABLE              /* Operating system availability */
      = D_MCP_FIRST_USER_DATUM, 
   D_CCT_QRY_APP_PREPARED,             /* Computer ready for application */
   D_CCT_QRY_APP_RUNNING,              /* Application is running */

   /* Demand datums */

   D_CCT_DMD_APP_START,                /* Demand application start */
   D_CCT_DMD_APP_KILL,                 /* Demand OS kill of application */
   D_CCT_DMD_OS_RESTART,               /* Demand closedown of OS with restart */
   D_CCT_DMD_OS_CLOSE,                 /* Demand closedown of OS - no restart */

   D_CCT_DATAID_EOL                    /* End of list marker */

} eCctDataId_t;


/* Definitions of start and end of demand datums - from data ID table */

#define E_CCT_QRY_MIN        D_CCT_QRY_OS_AVAILABLE
#define E_CCT_QRY_MAX        D_CCT_QRY_APP_RUNNING

/* Definitions of start and end of demand datums - from data ID table */

#define E_CCT_DMD_MIN        D_CCT_DMD_APP_START
#define E_CCT_DMD_MAX        D_CCT_DMD_OS_CLOSE


/* Services provided by the CCT */

typedef enum eCctService_e
{
   E_CCT_HEARTBEAT = E_MCP_HEARTBEAT,  /* Heartbeat command */
   E_CCT_SHUTDOWN  = E_MCP_SHUTDOWN,   /* Shutdown command */
   E_CCT_SAFESTATE = E_MCP_SAFESTATE,  /* Safestate command */
   E_CCT_ACTIVATE  = E_MCP_ACTIVATE,   /* Activate command */

   E_CCT_SET_1     = E_MCP_SET_1,      /* Generic set command */
   E_CCT_GET_1     = E_MCP_GET_1,      /* Generic get command */

   E_CCT_EOL                           /* End-of-list marker */ 
} eCctService_t;

/* Status and errors generated by the CCT */

typedef enum eCctStatus_e
{

   E_CCT_ERR_GEN = STATUS_START( CCT ),/* Miscellaneous error */
   E_CCT_ERR_SETUP,                    /* Error performing setup */
   E_CCT_ERR_CONFIG_FILE,              /* Error accessing the configuration file */
   E_CCT_ERR_CONFIG_PARAMS,            /* Error in contents of configuration file */
   E_CCT_ERR_CIL_NAME,                 /* Error matching CIL name */
   E_CCT_ERR_CIL_RX,                   /* Unexpected CIL message received */
   E_CCT_ERR_HEARTBEATS,               /* Assuming safe-state due to heartbeat loss */
   E_CCT_ERR_APP_START,                /* Error starting the application software */
   E_CCT_ERR_APP_KILL,                 /* Error killing the application software */
   E_CCT_ERR_OS_RESTART,               /* Error closing operating system for restart */
   E_CCT_ERR_OS_CLOSE,                 /* Error closing operating system down */
   E_CCT_ERR_COMMAND_LEN,              /* Error in length of incoming command */
   E_CCT_ERR_COMMAND,                  /* Error in incoming command */
   E_CCT_ERR_COMMAND_DATUM,            /* Error in datum of incoming command */
   E_CCT_ERR_APP_COUNT,                /* Number of applications to start exceeded */

   E_CCT_ERR_EOL                       /* End of list marker */
} eCctStatus_t;


#endif

/*
** EOF
*/
